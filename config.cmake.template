# -*- cmake -*-

# Here we have a bunch of user defined commands that are being loaded at the
# very start of the makefile generation process. You can use this setup file to
# for example change compiler flags.

# Enable the RW_ASSERT() macro. [ON|OFF]
SET(RW_ENABLE_ASSERT ON)

# Enable the use of the default RW_CXX_FLAGS. These will be appended to CMAKE_CXX_FLAGS
SET(RW_ENABLE_CXX_FLAGS ON)

# Enable building tests, examples and sandbox
SET(RW_BUILD_TESTS ON)
SET(RW_BUILD_EXAMPLES ON)
SET(RW_BUILD_SANDBOX OFF)

# If you want to use the new Xerces based XML loader then set to ON. But make sure that
# cmake is able to find the xerces include dir and lib dir
SET(USE_XERCES OFF)
#SET(XERCESC_INCLUDE_DIR "")
#SET(XERCESC_LIB_DIR "")

# Specify the root dir of your boost installation if it is not autodetected
# SET(BOOST_ROOT "")
# SET(Boost_LIBRARYDIR "") # if installed in non-standard dir

# Specify if you want to enable the use of yaobi for collision detection
SET(USE_YAOBI on)
SET(YAOBI_INCLUDE_DIR "${RW_ROOT}/ext/yaobi")
#SET(YAOBI_LIBRARY_DIR "") # If you use the yaobi from ext then it will be placed in the default 

# Specify if you want to enable the use of pqp for collision detection
SET(USE_PQP on)
SET(PQP_INCLUDE_DIR "${RW_ROOT}/ext/PQP")
#SET(PQP_LIBRARY_DIR "${RW_ROOT}/ext/PQP")

# By changing this variable you can *override* the default compile flags for
# RobWork. 
# SET(RW_CXX_FLAGS "-Wall")

# You can add your own specific compile flags (without overriding RobWork
# defaults) like this:
# SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -fPIC -fmessage-length=0")

# With Visual Studio maybe you want to add your own definitions
# if (DEFINED MSVC)
#   add_definitions(-D...)
# endif ()

# If you have optional libraries with include files outside of RobWork/ext/, you
# can add paths to these directories like this:
# list(APPEND CMAKE_REQUIRED_INCLUDES /path/to/somewhere)

# Add files to the library using the predefined USER variables.
# If you f.ex. want to add KDTree.cpp to sandbox library add the following
#
# SET(RW_SANDBOX_USER_FILES ${RW_SANDBOX_USER_FILES} KDTree.cpp)
#
# Other variables include RW_USER_FILES, RW_DRAWABLE_USER_FILES, etc.

# Set compiler to Intel C++ computer (currently there is trouble with lua)
# set(CMAKE_CXX_COMPILER icc)
