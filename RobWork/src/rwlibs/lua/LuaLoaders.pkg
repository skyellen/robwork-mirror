
$#include <rw/math.hpp>
$#include "LuaMath.hpp"
$#include "LuaModels.hpp"
$#include "LuaSensor.hpp"
$#include "LuaTrajectory.hpp"

$#include "LuaProximity.hpp"
$#include "LuaLoaders.hpp"

$using namespace rwlua::rw;

namespace rwlua { namespace rw {
/*
	class State;
	class Frame;

	class Q;
	class Vector3D;

	class Image;

	class WorkCell;
	class Device;

	class QPath;
	class StatePath;
	class TimedStatePath;
*/

    /*
  		These are the classes and functions we export.
	*/
	WorkCell loadWorkCell(const std::string& filename);
    CollisionSetup loadCollisionSetup(const std::string& filename);

    // Image
    Image* loadImage(const std::string& filename);
    void saveAsPGM(Image* img, const std::string& filename);

    // paths
    void storePath(const QPath& path, const std::string& file);
    void storePath(
        const WorkCell& workcell,
        const StatePath& path,
        const std::string& file);
    void storePath(
        const WorkCell& workcell,
        const TimedStatePath& path,
        const std::string& file);

    QPath* loadQPath(const std::string& file);

    StatePath* loadStatePath(
        const WorkCell& workcell,
        const std::string& file);

    TimedStatePath* loadTimedStatePath(
        const WorkCell& workcell,
        const std::string& file);

}}

/*
  We provide a rw module of wrapper functions and utility functions.

  These functions are compiled into the executable, so that the user never has
  to worry about the installation of the rw module.

  Also the user need not know about what namespace all of the above classes are
  actually located in.
*/
//$[


//$]
