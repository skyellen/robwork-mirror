
$#include <rwlibs/lua/robwork_wrapper.hpp>
$#include <simulator/Simulator.hpp>

/*
  These are the classes and functions we export.
*/
namespace dynamics { namespace lua { namespace internal {

    //----------------------------------------------------------------------
    // Simulator
    //----------------------------------------------------------------------

    class Simulator
    {
    public:
        // Lua methods:
        step(double dt, rw::kinematics::State& state);
        resetScene(rw::kinematics::State& state);
        double getTime();
    };



    //----------------------------------------------------------------------
    // Utility functions
    //----------------------------------------------------------------------
}}}

/*
  We provide a rw module of wrapper functions and utility functions.

  These functions are compiled into the executable, so that the user never has
  to worry about the installation of the rw module.

  Also the user need not know about what namespace all of the above classes are
  actually located in.
*/
/*
$[
    local rwsi = dynamics.lua.internal

    rws = {}

    function rws.getDynamicWorkCellOrNil()
        if not rwsi.workcell then
            return nil
        else
            return rwsi.makeWorkCell(rwsi.workcell)
        end
    end

    function rws.getDynamicWorkCell()
        local workcell = rwsi.getWorkCellOrNil()
        if not workcell then
            error("No workcell defined", 2)
        else
            return workcell
        end
    end
$]
*/